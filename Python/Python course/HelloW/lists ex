# lists
letters = ["a", "b", "c"]
zeros = [0] * 100
matrix = [[0, 1], [2, 3]]
numbers = list(range(0, 21, 2))  # list from 0 to 20 with step 2
chars = list("Hello World")
print(len(chars))  # print length of the list
numbers = list(range(20))
print(numbers[::2])  # print every second element from the list
print(numbers[::-1])  # print list in reverse order

numbers2 = [
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    87,
]
first, second, *other, last = numbers  # list unpacking
print(first)
print(other)
print(last)


for index, letter in enumerate(
    letters
):  # enumerate returns itarawble list in format (0, 'a') etc. here we can unpack this list to variables index and letter
    print(index, letter)


# add
letters.append("d")  # add a letter to the end of the list
print(letters)
letters.append("b")
print(letters)
letters.insert(0, "-")  # insert a letter into spesific place
print(letters)

# Remove
letters.remove("b")  # remove all "b" elements of the list
print(letters)
letters.pop()  # remove las element of the list
print(letters)
del letters[0:3]  # delete elements from 0 to 3
print(letters)


letters = ["a", "b", "c", "d", "dis", "d"]
print(letters.count("d"))  # returns a number of elements of the list = "d"
if "d" in letters:
    print(letters.index("d"))  # print an index of the first element = "d"


numbers = [3, 51, 2, 8, 6]
print(sorted(numbers))  # creates a new sorted list from unsorted one
print(
    sorted(numbers, reverse=True)
)  # creates a new sorted in reverse order list from unsorted one
print(numbers)
numbers.sort()  # sorts initial list
print(numbers)
numbers.sort(reverse=True)  # sorts initial list in reverse order
print(numbers)

# --------------------------------------------
items = [("product1", 10), ("product2", 9), ("product3", 12)]


# def sort_item(item):          usin lambda function is preferable if it's used only once as a parameter for antother function
#     return item[1]

# items.sort(key=sort_item)
# print(items)


items.sort(key=lambda item: item[1])
print(items)


items = [("product1", 10), ("product2", 9), ("product3", 12)]

# ------------------------------------------
# prices = []
# for item in items:
#     prices.append(item[1])

prices = list(map(lambda item: item[1], items))
print(prices)

# -----------------------------------------

items = [("product1", 10), ("product2", 9), ("product3", 12)]

filtered = list(
    filter(lambda item: item[1] >= 10, items)
)  # filter function takes lambda function and creates a filtered object.
print(filtered)

# -----------------------------------------
items = [("product1", 10), ("product2", 9), ("product3", 12)]

prices = [item[1] for item in items]  # mapping by list comprehension
# filtering by list comprehension
filtered = [item for item in items if item[1] >= 10]
print(prices)
print(filtered)


# ----------Zip
list1 = [1, 2, 3]
list2 = [10, 20, 30]

print(list(zip("abc", list1, list2)))


# Staks: Last In First Out-----------------------------------------
browsing_session = []
browsing_session.append(1)  # add an item to the end of the list
browsing_session.append(2)  # add an item to the end of the list
browsing_session.pop()  # remove last item from the list
if browsing_session:  # if the list is not empty
    print(browsing_session[-1])  # print last element of the list


# Queue-----------------------------------------
# -----------------------------------------
